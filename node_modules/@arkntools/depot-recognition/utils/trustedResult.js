export const MAX_SHOW_DIFF = 0.22;
export const MAX_TRUST_DIFF = {
    DEFAULT: 0.2,
    30021: 0.15,
    30041: 0.12,
    30042: 0.12,
    30043: 0.12,
    30044: 0.12,
    30062: 0.15,
    31024: 0.22,
};
const MAX_CLOSE_DIFF = 0.005;
export const isDiffsTooClose = (diffs) => diffs.length >= 2 && Math.abs(diffs[0][1] - diffs[1][1]) < MAX_CLOSE_DIFF;
export const isTrustedSimResult = (sim) => {
    var _a;
    if (!sim)
        return false;
    const { diff, name } = sim;
    const maxTrustDiff = (_a = MAX_TRUST_DIFF[name]) !== null && _a !== void 0 ? _a : MAX_TRUST_DIFF.DEFAULT;
    return diff < maxTrustDiff;
};
export const isTrustedResult = (result) => isTrustedSimResult(result === null || result === void 0 ? void 0 : result.sim);
const fromPairs = (pairs) => {
    const obj = {};
    pairs.forEach(([k, v]) => (obj[k] = v));
    return obj;
};
export const toSimpleTrustedResult = (data) => fromPairs(data.filter(isTrustedResult).map(({ num: { value }, sim: { name } }) => [name, value]));
